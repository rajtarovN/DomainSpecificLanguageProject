{# Assignments #}
{% set hasEnum = false %}
{% set hasRefProp = false %}
{% set idName = "id" %}
{% for prim in current_class.attributes %}
  {% if prim.isEnum %}
    {% set hasEnum = true %}
  {% endif %}
{% endfor %}
package uns.ac.rs.mbrs.mapper;

{% if hasEnum == true %}import uns.ac.rs.mbrs.enumeration.*;{% endif %}
import uns.ac.rs.mbrs.model.*;
import uns.ac.rs.mbrs.dtos.*;
import org.springframework.stereotype.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Component
public class {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}Mapper {

 {% if current_class.anotation.name == "basket" or current_class.anotation.name == "bying" %}
 private final ItemMapper itemMapper;
     public {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}Mapper(
                ItemMapper itemMapper
        ) {
            this.itemMapper = itemMapper;}
 {% endif %}
 {% if current_class.anotation and current_class.anotation.name=='action'%}
  private final ItemMapper itemMapper;
    public ActionMapper(
            ItemMapper itemMapper
    ) {
        this.itemMapper = itemMapper;}
 {%endif%}

    public {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO toDTO({{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} model) {
        {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO dto = new {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO();
         {% if current_class.anotation%}
            {% if current_class.anotation.name == "basket" %}
            if (model.getQuantity()!=null){
               List<Integer> quantities = new ArrayList<>(model.getQuantity());
            dto.setQuantity(quantities);
            }
            if (model.getItem()!=null){
                dto.setItem(itemMapper.toDTO(model.getItem()));
            }
            {% endif %}
            {% if current_class.anotation.name == "action" %}
            dto.setOriginalCode(model.getOriginalCode());
            dto.setDateFrom(model.getDateFrom());
            dto.setDateTo(model.getDateTo());
            {% endif %}
        {% endif %}
        {% for property in current_class.attributes %}
            {% if property.isEnum %}
        dto.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(model.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}().toString());
            {% else %}
        dto.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(model.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}());
            {% endif %}
        {% endfor %}
        dto.setId(model.getId());
        {% if current_class.anotation%}
            {% if current_class.anotation.name=="bying"%}
        dto.setCurrentPrice(model.getCurrentPrice());
        dto.setCurrent(model.isIscurrent());
         dto.setItem(model.getItem()!=null?itemMapper.toDTO(model.getItem()):new ItemDTO());
          {%endif%}
        {%endif%}

         {% if current_class.extends_user %}
        dto.setUsername(model.getUsername());
        dto.setPassword(model.getPassword());
        dto.setDeleted(model.isDeleted());
        dto.setLoggedFirstTime(model.isLoggedFirstTime());
        dto.setRole(model.getRole().getName());
        {%endif%}
        {% if current_class.anotation and current_class.anotation.name=='action'%}
        if (model.getItem()!=null){
            dto.setItemIds(new ArrayList<>());
            for (Item i : model.getItem()){
                dto.getItemIds().add(i.getId());
            }
        }
        {%endif%}
        return dto;
    }

     public List<{{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO> toDTO(List<{{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}> models) {
        List<{{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO> dtos = new ArrayList<{{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO>();
         for({{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} model : models){
          {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO dto = new {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO();

         {% if current_class.anotation%}
            {% if current_class.anotation.name == "basket" %}
            if (model.getQuantity()!=null){
                List<Integer> quantities = new ArrayList<>(model.getQuantity());
            dto.setQuantity(quantities);
            }
            if (model.getItem()!=null){
                dto.setItem(itemMapper.toDTO(model.getItem()));
            }
            {% endif %}
        {% endif %}
        {% for property in current_class.attributes %}
            {% if property.isEnum %}
        dto.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(model.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}().toString());
            {% else %}
        dto.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(model.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}());
            {% endif %}
        {% endfor %}
        dto.setId(model.getId());
        {% if current_class.anotation%}
            {% if current_class.anotation.name=="bying"%}
        dto.setCurrentPrice(model.getCurrentPrice());
        dto.setCurrent(model.isIscurrent());
         dto.setItem(model.getItem()!=null?itemMapper.toDTO(model.getItem()):new ItemDTO());
          {%endif%}
        {%endif%}
        dtos.add(dto);
        }
        return dtos;
    }

    public {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} toModel({{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO dto) {
        {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} model = new {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}();
        {% for property in current_class.attributes %}
            {% if property.isEnum %}
        model.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(dto.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}().toString());
            {% else %}
        model.set{{ property.name[0]|capitalize }}{{ property.name[1:]}}(dto.get{{ property.name[0]|capitalize }}{{ property.name[1:]}}());
            {% endif %}
        {% endfor %}
        {% if current_class.anotation%}
            {% if current_class.anotation.name=="bying"%}
                  model.setCurrentPrice(dto.getCurrentPrice());
                  model.setDeleted(false);
                  model.setIscurrent(true);
                  model.setId(dto.getId());
                  model.setItem(itemMapper.toModel(dto.getItem()));
            {%endif%}
        {%endif%}
        {% if current_class.anotation.name == "action" %}
            model.setOriginalCode(dto.getOriginalCode());
        model.setDateFrom(dto.getDateFrom());
        model.setDateTo(dto.getDateTo());
            {% endif %}
            {% if current_class.extends_user %}
        model.setUsername(dto.getUsername());
        model.setPassword(dto.getPassword());
        model.setDeleted(dto.isDeleted());
        model.setLoggedFirstTime(dto.isLoggedFirstTime());

        {%endif%}
        return model;
    }
}
