public {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO update(long id,{{ current_class.name }}DTO {{ current_class.name | lower }}dto) {
    Optional<{{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}> {{ current_class.name[0]|lower }}{{ current_class.name[1:] }} = {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}Repository.findById(id);
    if ({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.isPresent()){
            {% for property in current_class.attributes %}
            {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get().set{{property.name[0]|capitalize}}{{property.name[1:]}}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}dto.get{{property.name[0]|capitalize}}{{property.name[1:]}}());
            {%endfor%}



                    {% for prop in current_class.reference_properties %}
        {% if prop.upper == -1 %}
        {% if not "_" in prop.mapped_by|string %}
        List<{{ prop.type | capitalize }}> {{ prop.name | lower }}s = new ArrayList<>();
        for (Long d : {{ current_class.name | lower }}dto.get{{ prop.name[0] | capitalize }}{{ prop.name[1:] }}Ids()) {
            {{ prop.type | capitalize }} {{ prop.type | lower }} = {{ prop.type | lower }}Repository.getById(d);
            {{ prop.name | lower }}s.add({{ prop.type | lower }});

{% set found = [] %}
{% for model_cl in model.classes if not found %}
    {% if model_cl.name == prop.name %}
        {% for p in model_cl.reference_properties %}
            {% if p.name == current_class.name %}
                {% set _ = found.append(1) %}
                {% if prop.cardinality == 'OneToMany' %}

                {{ prop.type | lower }}.set{% if p.as_part != "" and p.as_part!="*"%}{{ p.as_part[0] | capitalize }}{{ p.as_part[1:] }}{% else %}{{ p.name[0] | capitalize }}{{ p.name[1:] }}{% endif %}({{ p.name[0] | lower }}{{ p.name[1:] }}.get());

                {% else %}
                //todo pazi na liste
                {% if prop.cardinality == 'OneToOne' %}
                {{ prop.type | lower }}.set{% if p.as_part != "" and p.as_part!="*"%}{{ p.as_part[0] | capitalize }}{{ p.as_part[1:] }}{% else %}{{ p.name[0] | capitalize }}{{ p.name[1:] }}{% endif %}({{ p.name[0] | lower }}{{ p.name[1:] }}.get());
                {%else%}
                 {{ prop.type | lower }}.get{% if p.as_part != "" and p.as_part!="*"%}{{ p.as_part[0] | capitalize }}{{ p.as_part[1:] }}{% else %}{{ p.name[0] | capitalize }}{{ p.name[1:] }}{% endif %}().add({{ p.name[0] | lower }}{{ p.name[1:] }}.get());
{% endif %}
            {% endif %}
            {% endif %}
        {% endfor %}
        {% if 1 not in found %}
        {% if prop.cardinality == 'OneToMany' %}
        {{ prop.type | lower }}.set{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});
        {%else%}
        {% if prop.cardinality != 'OneToOne' %}
    {{ prop.type | lower }}.get{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}().add({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});
    {%else%}
    {{ prop.type | lower }}.set{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});

{% endif %}
{% endif %}
{% endif %}
    {% endif %}
{% endfor %}

        }

        {{ current_class.name | lower }}.get().set{% if prop.as_part != "" and prop.as_part!="*"%}{{ prop.as_part | capitalize }}({{ prop.name | lower }}s){%else%}{{ prop.name | capitalize }}({{ prop.name | lower }}s){%endif%};
        {% endif %}
{% endif %}
        {% if prop.upper != -1 %}
        {% if not "_" in prop.mapped_by|string %}
       //ovde
{% set found = [] %}
{% for model_cl in model.classes if not found %}
    {% if model_cl.name == prop.name %}
        {% for p in model_cl.reference_properties %}
            {% if p.name == current_class.name %}
                {% set _ = found.append(1) %}

                    {% if prop.cardinality == 'OneToMany' %}

                    {{ prop.type | capitalize }} {{ prop.type | lower }} ={{ prop.type | lower }}Repository.getById({{ current_class.name | lower }}dto.getId());
                    {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get().set{% if p.as_part!="" and p.as_part!="*"%}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}{%endif%}({{ prop.type | lower }});

                    {{ prop.type | lower }}.set{% if p.as_part!="" and prop.as_part!="*"%}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});

                    {% else %}
                    {{ prop.type | capitalize }} {{ prop.type | lower }} ={{ prop.type | lower }}Repository.getById({{ current_class.name | lower }}dto.get{% if prop.as_part!="" and prop.as_part!="*"%}{{ prop.as_part[0]|capitalize }}{{ prop.as_part[1:]}}(){%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}(){%endif%}.getId());
                    {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get().set{% if prop.as_part!="" and p.as_part!="*"%}{{ prop.as_part[0]|capitalize }}{{ prop.as_part[1:]}}{%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}{%endif%}({{ prop.type | lower }});
{% if prop.cardinality != 'OneToOne' %}
                    {{ prop.type | lower }}.get{% if p.as_part!="" and p.as_part!="*"%}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}().add({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get());
{%else%}
                    {{ prop.type | lower }}.set{% if p.as_part!="" and p.as_part!="*"%}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get());

{% endif %}
{% endif %}
        {% endif %}
        {% endfor %}
                {% if 1 not in found %}
                 {% if prop.cardinality == 'OneToMany' %}
                 {{ prop.type | lower }}.get{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});

                  {% else %}
                  {% if prop.cardinality != 'OneToOne' %}
        {{ prop.type | lower }}.get{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}().add({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get());
        {%else%}
        {{ prop.type | lower }}.set{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get());

        {% endif %}
        {% endif %}
        {% endif %}
        {% endif %}
        {% endfor %}

        {% endif %}
        {% endif %}
        {% endfor %}
            {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} s = {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}Repository.save({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.get());
            return {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}Mapper.toDTO(s);
        }
        return null;


       }