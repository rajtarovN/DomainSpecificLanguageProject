@Transactional
public {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }}DTO save({{ current_class.name }}DTO {{ current_class.name | lower }}dto) {

    {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} {{ current_class.name[0]|lower }}{{ current_class.name[1:] }} = {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}Mapper.toModel({{ current_class.name[0]|lower }}{{ current_class.name[1:] }}dto);

    {% for prop in current_class.reference_properties %}
        {% if prop.upper == -1 %}
            {% if not "_" in prop.mapped_by|string %}
                List<{{ prop.type | capitalize }}> {{ prop.name | lower }}s = new ArrayList<>();
                for (Long d : {{ current_class.name | lower }}dto.get{{ prop.name[0] | capitalize }}{{ prop.name[1:] }}Ids()) {
                    {{ prop.type | capitalize }} {{ prop.type | lower }} = {{ prop.type | lower }}Repository.getById(d);
                    {{ prop.name | lower }}s.add({{ prop.type | lower }});

                    {% set found = [] %}
                    {% for model_cl in model.classes if not found %}
                        {% if model_cl.name == prop.name %}
                            {% for p in model_cl.reference_properties %}
                                {% if p.name == current_class.name %}
                                    {% set _ = found.append(1) %}
                                    {% if prop.cardinality == 'OneToMany' %}
                                        {{ prop.type | lower }}.set{% if p.as_part != "" and p.as_part!="*" %}{{ p.as_part[0] | capitalize }}{{ p.as_part[1:] }}{% else %}{{ p.name[0] | capitalize }}{{ p.name[1:] }}{% endif %}({{ p.name[0] | lower }}{{ p.name[1:] }});
                                    {% else %}
                                        {{ prop.type | lower }}.get{% if p.as_part != "" and p.as_part!="*"%}{{ p.as_part[0] | capitalize }}{{ p.as_part[1:] }}{% else %}{{ p.name[0] | capitalize }}{{ p.name[1:] }}{% endif %}().add({{ p.name[0] | lower }}{{ p.name[1:] }});
                                    {% endif %}
                                {% endif %}
                            {% endfor %}
                            {% if 1 not in found %}
                                {% if prop.cardinality == 'OneToMany' %}
                                    {{ prop.type | lower }}.set{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});
                                {%else%}
                                    {% if prop.cardinality == 'OneToOne' %}
                                        {{ prop.type | lower }}.set{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});
                                    {%else%}
                                        {{ prop.type | lower }}.get{{ current_class.name[0] | capitalize }}{{ current_class.name[1:] }}().add({{ current_class.name[0] | lower }}{{ current_class.name[1:] }});
                                    {% endif %}
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                }
                {{ current_class.name | lower }}.set{% if prop.as_part != "" and prop.as_part!="*"%}{{ prop.as_part | capitalize }}({{ prop.name | lower }}s){%else%}{{ prop.name | capitalize }}({{ prop.name | lower }}s){%endif%};
            {% endif %}
        {% endif %}
        {% if prop.upper != -1 %}
            {% if not "_" in prop.mapped_by|string %}
                {% set found = [] %}
                {% for model_cl in model.classes if not found %}
                    {% if model_cl.name == prop.name %}
                        {% for p in model_cl.reference_properties %}
                            {% if p.name == current_class.name %}
                                {% set _ = found.append(1) %}
                                {% if prop.cardinality == 'OneToMany' %}
                                    {{ prop.type | capitalize }} {{ prop.type | lower }} = {{ prop.type | lower }}Repository.getById({{ current_class.name | lower }}dto.getId());
                                    {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.set{% if p.as_part!="" and p.as_part!="*" %}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}{%endif%}({{ prop.type | lower }});
                                    {{ prop.type | lower }}.set{% if p.as_part!="" and p.as_part!="*" %}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                                {% else %}
                                    if({{ current_class.name | lower }}dto.get{% if prop.as_part!="" and prop.as_part!="*" %}{{ prop.as_part[0]|capitalize }}{{ prop.as_part[1:]}}{%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}{%endif%}()!=null) {
                                        {{ prop.type | capitalize }} {{ prop.type | lower }} = {{ prop.type | lower }}Repository.getById({{ current_class.name | lower }}dto.get{% if prop.as_part!="" and prop.as_part!="*" %}{{ prop.as_part[0]|capitalize }}{{ prop.as_part[1:]}}(){%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}(){%endif%}.getId());
                                        {{ current_class.name[0]|lower }}{{ current_class.name[1:] }}.set{% if prop.as_part!="" and prop.as_part!="*" %}{{ prop.as_part[0]|capitalize }}{{ prop.as_part[1:]}}{%else%}{{ prop.name[0]|capitalize }}{{ prop.name[1:]}}{%endif%}({{ prop.type | lower }});
                                        {% if prop.cardinality != 'OneToOne' %}
                                            {{ prop.type | lower }}.get{% if p.as_part!="" and p.as_part!="*" %}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}().add({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                                        {%else%}
                                            {{ prop.type | lower }}.set{% if p.as_part!="" and p.as_part!="*" %}{{ p.as_part[0]|capitalize }}{{ p.as_part[1:]}}{%else%}{{ p.name[0]|capitalize }}{{ p.name[1:]}}{%endif%}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                                        {% endif %}
                                    }
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                        {% if 1 not in found %}
                            {% if prop.cardinality == 'OneToMany' %}
                                {{ prop.type | lower }}.get{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                            {% else %}
                                {% if prop.cardinality != 'OneToOne' %}
                                    {{ prop.type | lower }}.get{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}().add({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                                {%else%}
                                    {{ prop.type | lower }}.set{{ current_class.name[0]|capitalize }}{{ current_class.name[1:]}}({{ current_class.name[0]|lower }}{{ current_class.name[1:] }});
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    {% endif %}
                {% endfor %}
            {% endif %}
        {% endif %}
    {% endfor %}
    {% if current_class.anotation %}
        {% if current_class.anotation.name =="bill" %}
            {% set variable_name = None %}
            {% for m in model.classes%}
                       {% if m.anotation%}
                            {% if m.anotation.name == "item" %}
                                {% set variable_name = m.name %}
                            {% endif%}
                       {% endif%}
            {%endfor%}
            {%if variale_name%}
                {% for m in model.classes%}
                       {% if m.anotation%}
                            {% if m.anotation.name == "bying" %}
                                {% if m.anotation.how_much == "more" %}
                                    List <{{m.name[0]|capitalize}}{{m.name[1:]}}> {{m.name[0]|lower}}{{m.name[1:]}} = new ArrayList<>();
                                    double price = 0;
                                    for(Object o : {{ current_class.name | lower }}dto.get{{variable_name[0]|capitalize}}{{varable_name[1:]}}){
                                        {{m.name[0]|lower}}{{m.name[1:]}}.add({{m.name[0]|lower}}{{m.name[1:]}}Repository.findByItemIdAndIsCurrent({{ current_class.name | lower }}dto.getItem.getId()));
                                        price += {{m.name[0]|lower}}{{m.name[1:]}}.get({{m.name[0]|lower}}{{m.name[1:]}}.length-1);
                                    }
                                    {{ current_class.name | lower }}.setTotalPrice(price);
                                    {{ current_class.name | lower }}.set{{m.name[0]|capitalize}}{{m.name[1:]}}({{m.name[0]|lower}}{{m.name[1:]}});
                                    actionService.actionName(sve sto saljem);
                                {%else%}
                                fali datum
                                {{ current_class.name | lower }}.set{{m.name[0]|capitalize}}{{m.name[1:]}}({{m.name[0]|lower}}{{m.name[1:]}}Repository.findByItemIdAndIsCurrent({{ current_class.name | lower }}dto.getItem.getId());
                                 {{ current_class.name | lower }}.setTotalPrice(price);
                                 actionService.actionName(sve sto saljem);
                                {% endif %}
                            {% endif %}
                       {% endif %}
                 {%endfor%}
            {% endif %}
        {% endif %}
        {% if current_class.anotation.name =="action" %}
        {{ current_class.name | lower }}.setTransformedCode(this.generateCode({{ current_class.name | lower }}dto.getOriginalCode()));
        {% endif %}
    {% endif %}
    {{ current_class.name[0]|capitalize }}{{ current_class.name[1:] }} s = {{ current_class.name | lower }}Repository.save({{ current_class.name | lower }});
    return {{ current_class.name | lower }}Mapper.toDTO({{ current_class.name | lower }});
}
{% if current_class.anotation.name =="action" %}
public String generateCode(String originalCode){
//todo
return "";
}

public void doAction{{current_class.anotation.name_f[0]|capitalize}}{{current_class.anotation.name_f[1:]}}( {% for p in current_class.anotation.params%}{{p.type}} {{p.name}}{% if not loop.last %}, {% endif %}{%endfor%}){


}
}

{% endif %}
